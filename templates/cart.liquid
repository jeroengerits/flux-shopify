{% comment %}
  Cart page template
  Shows all products in the cart with quantity controls and remove functionality
  Responsive design matching the provided image layout
{% endcomment %}

<div class='px-6'>
  <form action='/cart' method='post' novalidate>
    {% if cart.item_count > 0 %}
      <div class='grid grid-cols-1 gap-8 lg:grid-cols-3'>
        <!-- Left Column: Shopping Cart -->
        <div class='lg:col-span-2'>
          <div class='border-brand-neutral-200 overflow-hidden  rounded-lg border bg-white'>
            <!-- Table Header -->
            <div class='hidden gap-4 border-b border-neutral-200 bg-neutral-50 px-6 py-4 text-xs font-semibold uppercase tracking-wide text-neutral-500 md:grid md:grid-cols-12'>
              <div class='md:col-span-6'>Product Details</div>
              <div class='text-center md:col-span-2'>Quantity</div>
              <div class='text-center md:col-span-2'>Price</div>
              <div class='text-center md:col-span-2'>Total</div>
            </div>

            <!-- Cart Items -->
            <div class='divide-brand-neutral-200 divide-y'>
              {% for item in cart.items %}
                <div class='p-4 md:p-6' data-item-key='{{ item.key }}'>
                  <!-- Mobile Layout -->
                  <div class='block space-y-4 md:hidden'>
                    <!-- Product Image and Details -->
                    <div class='flex items-start space-x-4'>
                      <div class='flex-shrink-0'>
                        <a href='{{ item.url }}' class='block'>
                          {% if item.image %}
                            <img
                              src='{{ item.image | image_url: width: 200, crop: 'center' }}'
                              alt='{{ item.image.alt | escape }}'
                              loading='lazy'
                              width='200'
                              height='200'
                              class='h-24 w-24 rounded-lg object-cover'
                            >
                          {% else %}
                            {{ 'product-1' | placeholder_svg_tag: 'w-24 h-24 text-brand-neutral-300 rounded-lg' }}
                          {% endif %}
                        </a>
                      </div>

                      <div class='min-w-0 flex-1'>
                        {% render 'item-title', text: item.product.title %}
                        {% render 'item-subtitle', text: item.product.type %}

                        {% if item.product.has_only_default_variant == false %}
                          <div class='mt-1'>
                            {% for option in item.options_with_values %}
                              <span class='bg-brand-neutral-200 text-brand-neutral-800 inline-block rounded px-2 py-1 text-xs font-medium'>
                                {{ option.value }}
                              </span>
                            {% endfor %}
                          </div>
                        {% endif %}
                      </div>
                    </div>

                    <!-- Price, Quantity, and Total -->
                    <div class='grid grid-cols-3 gap-4 text-center'>
                      <div>
                        <span class='text-brand-neutral-500 text-sm font-medium'>Price</span>
                        {% render 'item-price',
                          amount: item.final_price,
                          size: 'lg',
                          weight: 'semibold',
                          color: 'primary'
                        %}
                      </div>
                      <div>
                        <div class='flex justify-center md:col-span-2'>
                          <div class='flex items-center gap-1'>
                            {% render 'button',
                              type: 'button',
                              label: '−',
                              variant: 'outline',
                              size: 'sm',
                              class: 'flex h-8 w-8 cursor-pointer items-center justify-center border-r border-brand-neutral-300 bg-white text-lg font-medium text-brand-neutral-700 transition-all hover:text-brand-neutral-950',
                              data_action: 'decrease',
                              data_item_key: item.key
                            %}
                            <span class='text-brand-neutral-900 w-8 bg-white py-3 text-center text-lg font-semibold'>
                              {{ item.quantity }}
                            </span>
                            <input
                              type='hidden'
                              name='updates[]'
                              data-item-key='{{ item.key }}'
                              value='{{ item.quantity }}'
                            >
                            {% render 'button',
                              type: 'button',
                              label: '+',
                              variant: 'outline',
                              size: 'sm',
                              class: 'flex h-8 w-8 cursor-pointer items-center justify-center border-l border-brand-neutral-300 bg-white text-lg font-medium text-brand-neutral-700 transition-all hover:text-brand-neutral-950',
                              data_action: 'increase',
                              data_item_key: item.key
                            %}
                          </div>
                        </div>
                      </div>
                      <div>
                        <span class='text-brand-neutral-500 text-sm font-medium'>Total</span>
                        {% render 'item-price',
                          amount: item.final_line_price,
                          size: 'lg',
                          weight: 'semibold',
                          color: 'primary'
                        %}
                      </div>
                    </div>
                  </div>

                  <!-- Desktop Layout -->
                  <div class='hidden items-center gap-4 md:grid md:grid-cols-12'>
                    <!-- Product Details -->
                    <div class='md:col-span-6'>
                      <div class='flex items-center space-x-4'>
                        <div class='flex-shrink-0'>
                          <a href='{{ item.url }}' class='block'>
                            {% if item.image %}
                              <img
                                src='{{ item.image | image_url: width: 200, crop: 'center' }}'
                                alt='{{ item.image.alt | escape }}'
                                loading='lazy'
                                width='200'
                                height='200'
                                class='h-24 w-24 rounded-lg object-cover'
                              >
                            {% else %}
                              {{ 'product-1' | placeholder_svg_tag: 'w-16 h-16 text-brand-neutral-300 rounded-lg' }}
                            {% endif %}
                          </a>
                        </div>

                        <div class='min-w-0 flex-1'>
                          {% render 'item-title', text: item.product.title %}
                          {% render 'item-subtitle', text: item.product.type %}

                          {% if item.product.has_only_default_variant == false %}
                            <div class='mt-1'>
                              {% for option in item.options_with_values %}
                                <span class='bg-brand-neutral-200 text-brand-neutral-800 inline-block rounded px-2 py-1 text-xs font-medium'>
                                  {{ option.value }}
                                </span>
                              {% endfor %}
                            </div>
                          {% endif %}
                        </div>
                      </div>
                    </div>

                    <!-- Quantity -->
                    <div class='flex justify-center md:col-span-2'>
                      <div class='flex items-center gap-1'>
                        {% render 'button',
                          type: 'button',
                          label: '−',
                          variant: 'outline',
                          size: 'sm',
                          class: 'flex h-10 w-10 cursor-pointer items-center justify-center border-r border-brand-neutral-300 bg-white text-lg font-medium text-brand-neutral-700 transition-all hover:text-brand-neutral-950',
                          data_action: 'decrease',
                          data_item_key: item.key
                        %}
                        <span class='text-brand-neutral-900 w-12 bg-white py-3 text-center text-lg font-semibold'>
                          {{ item.quantity }}
                        </span>
                        {% render 'button',
                          type: 'button',
                          label: '+',
                          variant: 'outline',
                          size: 'sm',
                          class: 'flex h-10 w-10 cursor-pointer items-center justify-center border-l border-brand-neutral-300 bg-white text-lg font-medium text-brand-neutral-700 transition-all hover:text-brand-neutral-950',
                          data_action: 'increase',
                          data_item_key: item.key
                        %}
                      </div>
                    </div>

                    <!-- Price -->
                    <div class='text-center md:col-span-2'>
                      {% render 'item-price',
                        amount: item.final_price,
                        size: 'lg',
                        weight: 'semibold',
                        color: 'primary'
                      %}
                    </div>

                    <!-- Total -->
                    <div class='text-center md:col-span-2'>
                      {% render 'item-price',
                        amount: item.final_line_price,
                        size: 'lg',
                        weight: 'semibold',
                        color: 'primary'
                      %}
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>

        <!-- Right Column: Order Summary -->
        <div class='lg:col-span-1'>
          <div class='border-brand-neutral-200 sticky  top-6 rounded-lg border bg-white p-6'>
            <!-- Total Cost -->
            <div class='flex items-center justify-between'>
              <span class='text-brand-neutral-500 text-lg  font-medium'
                >Total Cost <small class='font-normal'>Including Taxes</small>
              </span>
              {% render 'item-price', amount: cart.total_price, size: '2xl', weight: 'bold', color: 'primary' %}
            </div>

            <!-- Checkout Button -->
            <div class='mt-6'>
              {% render 'button',
                type: 'submit',
                label: 'Checkout',
                variant: 'primary',
                size: 'lg',
                full_width: true,
                name: 'checkout',
                class: 'bg-brand-primary hover:bg-brand-neutral-800'
              %}
            </div>

            <!-- Continue Shopping Link -->
            <div class='mt-4 text-center'>
              {% render 'button',
                label: 'Continue Shopping',
                variant: 'ghost',
                size: 'sm',
                href: '/collections/stock'
              %}
            </div>
          </div>
        </div>
      </div>
    {% else %}
      <!-- Empty Cart State -->
      <div class='py-16 text-center lg:py-24'>
        <div class='mx-auto max-w-md'>
          <div class='bg-brand-neutral-100 mx-auto mb-6 flex h-24 w-24 items-center justify-center rounded-full'>
            <svg class='text-brand-neutral-400 h-12 w-12' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
              <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z'></path>
            </svg>
          </div>
          {% render 'item-title', text: 'Your cart is empty' %}
          {% render 'paragraph', text: 'Looks like you haven\'t added anything to your cart yet. Start shopping to fill it up!' %}
          {% render 'button',
            label: 'Start Shopping',
            variant: 'primary',
            size: 'lg',
            icon_left: 'M12 6v6m0 0v6m0-6h6m-6 0H6',
            href: '/collections/all'
          %}
        </div>
      </div>
    {% endif %}
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Quantity controls
    document.querySelectorAll('button[data-action="decrease"], button[data-action="increase"]').forEach(btn => {
      btn.addEventListener('click', function () {
        const action = this.dataset.action;
        const itemKey = this.dataset.itemKey;
        const quantitySpan = this.parentElement.querySelector('span');
        let currentValue = parseInt(quantitySpan.textContent);

        if (action === 'increase') {
          currentValue += 1;
        } else if (action === 'decrease') {
          currentValue -= 1;
        }

        // Update the display
        quantitySpan.textContent = currentValue;

        // Update the hidden input for form submission
        let hiddenInput = document.querySelector(`input[name="updates[]"][data-item-key="${itemKey}"]`);
        if (!hiddenInput) {
          hiddenInput = document.createElement('input');
          hiddenInput.type = 'hidden';
          hiddenInput.name = 'updates[]';
          hiddenInput.dataset.itemKey = itemKey;
          hiddenInput.value = currentValue;
          this.closest('form').appendChild(hiddenInput);
        } else {
          hiddenInput.value = currentValue;
        }

        // Auto-submit form after a short delay
        clearTimeout(this.updateTimeout);
        this.updateTimeout = setTimeout(() => {
          this.closest('form').submit();
        }, 500);
      });
    });
  });
</script>
