{% comment %}
  Cart page template
  Shows all products in the cart with quantity controls and remove functionality
  Responsive design matching the provided image layout
{% endcomment %}

<div class="px-6">
    <form action="/cart" method="post" novalidate>
         
        <div class="">
    {% if cart.item_count > 0 %}
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Left Column: Shopping Cart -->
          <div class="lg:col-span-2">
            <div class="bg-white rounded-lg shadow-sm overflow-hidden border border-neutral-200">
              <!-- Table Header -->
              <div class="hidden md:grid md:grid-cols-12 gap-4 px-6 py-4 bg-neutral-50 border-b border-neutral-200 text-xs font-semibold text-neutral-500 uppercase tracking-wide">
                <div class="md:col-span-6">Product Details</div>
                <div class="md:col-span-2 text-center">Quantity</div>
                <div class="md:col-span-2 text-center">Price</div>
                <div class="md:col-span-2 text-center">Total</div>
              </div>

              <!-- Cart Items -->
              <div class="divide-y divide-neutral-200">
                {% for item in cart.items %}
                  <div class="p-4 md:p-6" data-item-key="{{ item.key }}">
                    <!-- Mobile Layout -->
                    <div class="block md:hidden space-y-4">
                      <!-- Product Image and Details -->
                      <div class="flex items-start space-x-4">
                        <div class="flex-shrink-0">
                          <a href="{{ item.url }}" class="block">
                            {% if item.image %}
                              <img src="{{ item.image | image_url: width: 200, crop: 'center' }}" 
                                   alt="{{ item.image.alt | escape }}" 
                                   loading="lazy"
                                   width="200" 
                                   height="200"
                                   class="w-24 h-24 object-cover rounded-lg">
                            {% else %}
                              {{ 'product-1' | placeholder_svg_tag: 'w-24 h-24 text-neutral-300 rounded-lg' }}
                            {% endif %}
                          </a>
                        </div>
                        
                        <div class="flex-1 min-w-0">
                            <h3 class="text-lg font-semibold text-neutral-900">
                                <a href="{{ item.url }}" class="hover:text-neutral-700 transition-colors">
                                  {{ item.product.title }}
                                </a>
                              </h3>

                              <div class="text-base font-normal text-neutral-500">
                                  {{ item.product.type }}
                              </div>
                          
                          {% if item.product.has_only_default_variant == false %}
                            <div class="mt-1">
                              {% for option in item.options_with_values %}
                                <span class="inline-block px-2 py-1 text-xs font-medium bg-neutral-200 text-neutral-800 rounded">
                                  {{ option.value }}
                                </span>
                              {% endfor %}
                            </div>
                          {% endif %}
                          
                          <button type="button" 
                                  class="mt-2 text-sm text-red-600 hover:text-red-800 transition-colors"
                                  data-action="remove" 
                                  data-item-key="{{ item.key }}">
                            Remove
                          </button>
                        </div>
                      </div>
                      
                      <!-- Price, Quantity, and Total -->
                      <div class="grid grid-cols-3 gap-4 text-center">
                        <div>
                          <span class="text-sm font-medium text-neutral-500">Price</span>
                          <p class="text-lg font-semibold text-neutral-900">{{ item.final_price | money }}</p>
                        </div>
                        <div>
                            <div class="md:col-span-2 flex justify-center">
                                <div class="flex items-center border border-neutral-300 rounded-lg overflow-hidden shadow-sm">
                                  <button type="button"
                                          class="w-10 h-10 bg-white border-r border-neutral-300 cursor-pointer transition-all disabled:opacity-40 disabled:cursor-not-allowed flex items-center justify-center text-neutral-700 hover:text-neutral-950 font-medium text-lg"
                                          data-action="decrease"
                                          data-item-key="{{ item.key }}"
                                          {% if item.quantity <= 1 %}disabled{% endif %}>−</button>
                                  <span class="w-16 text-center py-3 bg-white text-neutral-900 font-semibold text-lg">
                                    {{ item.quantity }}
                                  </span>
                                  <input type="hidden" name="updates[]" data-item-key="{{ item.key }}" value="{{ item.quantity }}">
                                  <button type="button"
                                    class="w-10 h-10 bg-white border-l border-neutral-300 cursor-pointer transition-all disabled:opacity-40 disabled:cursor-not-allowed flex items-center justify-center text-neutral-700 hover:text-neutral-950 font-medium text-lg"
                                    data-action="increase"
                                          data-item-key="{{ item.key }}">+</button>
                                </div>
                              </div>
                        </div>
                        <div>
                          <span class="text-sm font-mediu   m text-neutral-500">Total</span>
                          <p class="text-lg font-semibold text-neutral-900">{{ item.final_line_price | money }}</p>
                        </div>
                      </div>
                    </div>

                    <!-- Desktop Layout -->
                    <div class="hidden md:grid md:grid-cols-12 gap-4 items-center">
                      <!-- Product Details -->
                      <div class="md:col-span-6">
                        <div class="flex items-center space-x-4">
                          <div class="flex-shrink-0">
                            <a href="{{ item.url }}" class="block">
                              {% if item.image %}
                                <img src="{{ item.image | image_url: width: 200, crop: 'center' }}" 
                                    alt="{{ item.image.alt | escape }}" 
                                    loading="lazy"
                                    width="200" 
                                    height="200"
                                    class="w-24 h-24 object-cover rounded-lg">
                              {% else %}
                                {{ 'product-1' | placeholder_svg_tag: 'w-16 h-16 text-neutral-300 rounded-lg' }}
                              {% endif %}
                            </a>
                          </div>

                          <div class="flex-1 min-w-0">
                            <h3 class="text-lg font-semibold text-neutral-900">
                              <a href="{{ item.url }}" class="hover:text-neutral-700 transition-colors">
                                {{ item.product.title }}
                              </a>
                            </h3>

                            <div class="text-base font-normal text-neutral-500">
                                {{ item.product.type }}
                            </div>

                            {% if item.product.has_only_default_variant == false %}
                              <div class="mt-1">
                                {% for option in item.options_with_values %}
                                  <span class="inline-block px-2 py-1 text-xs font-medium bg-neutral-200 text-neutral-800 rounded">
                                    {{ option.value }}
                                  </span>
                                {% endfor %}
                              </div>
                            {% endif %}

                            <button type="button"
                                    class="text-xs tracking-wide text-neutral-600 hover:text-red-600 transition-colors"
                                    data-action="remove"
                                    data-item-key="{{ item.key }}">
                              Remove
                            </button>
                          </div>
                        </div>
                      </div>

                      <!-- Quantity -->
                      <div class="md:col-span-2 flex justify-center">
                        <div class="flex items-center border border-neutral-300 rounded-lg overflow-hidden shadow-sm">
                          <button type="button"
                                  class="w-10 h-10 bg-white border-r border-neutral-300 cursor-pointer transition-all disabled:opacity-40 disabled:cursor-not-allowed flex items-center justify-center text-neutral-700 hover:text-neutral-950 font-medium text-lg"
                                  data-action="decrease"
                                  data-item-key="{{ item.key }}"
                                  {% if item.quantity <= 1 %}disabled{% endif %}>−</button>
                          <span class="w-16 text-center py-3 bg-white text-neutral-900 font-semibold text-lg">
                            {{ item.quantity }}
                          </span>
                          <button type="button"
                            class="w-10 h-10 bg-white border-l border-neutral-300 cursor-pointer transition-all disabled:opacity-40 disabled:cursor-not-allowed flex items-center justify-center text-neutral-700 hover:text-neutral-950 font-medium text-lg"
                            data-action="increase"
                                  data-item-key="{{ item.key }}">+</button>
                        </div>
                      </div>

                      <!-- Price -->
                      <div class="md:col-span-2 text-center">
                        <span class="text-lg font-semibold text-neutral-900">{{ item.final_price | money }}</span>
                      </div>

                      <!-- Total -->
                      <div class="md:col-span-2 text-center">
                        <span class="text-lg font-semibold text-neutral-900">{{ item.final_line_price | money }}</span>
                      </div>
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>

           
          </div>

          <!-- Right Column: Order Summary -->
          <div class="lg:col-span-1">
            <div class="bg-white rounded-lg shadow-sm border border-neutral-200 p-6 sticky top-6">
              
              <!-- Items Subtotal -->
              <div class="flex justify-between items-center pb-3 border-b border-neutral-200">
                <span class="text-sm font-medium text-neutral-600 uppercase tracking-wide">Items {{ cart.item_count }}</span>
                <span class="text-lg font-semibold text-neutral-900">{{ cart.total_price | money }}</span>
              </div>
              
              <!-- Total Cost -->
              <div class="flex justify-between items-center py-4 border-b border-neutral-200">
                <span class="text-lg font-bold text-neutral-900 uppercase tracking-wide">Total Cost</span>
                <span class="text-2xl font-bold text-neutral-900">
                  {{ cart.total_price | money }}
                </span>
              </div>
              
              <!-- Checkout Button -->
              <div class="mt-6">
                <button type="submit" 
                        name="checkout" 
                        class="w-full py-4 bg-neutral-700 hover:bg-neutral-800 text-white font-medium text-lg rounded-lg transition-colors duration-200">
                  Checkout
                </button>
              </div>
            </div>
          </div>
        </div>
    {% else %}
      <!-- Empty Cart State -->
      <div class="text-center py-16 lg:py-24">
        <div class="mx-auto max-w-md">
          <div class="w-24 h-24 mx-auto mb-6 bg-neutral-100 rounded-full flex items-center justify-center">
            <svg class="w-12 h-12 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
            </svg>
          </div>
          <h2 class="text-2xl sm:text-3xl font-bold text-neutral-900 mb-4">Your cart is empty</h2>
          <p class="text-lg text-neutral-600 mb-8">Looks like you haven't added anything to your cart yet. Start shopping to fill it up!</p>
          <a href="/collections/all" class="inline-flex items-center px-8 py-4 bg-neutral-800 hover:bg-neutral-900 text-white font-semibold rounded-lg transition-colors duration-200">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Start Shopping
          </a>
        </div>
      </div>
    {% endif %}
  </div>
</form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quantity controls
    document.querySelectorAll('button[data-action="decrease"], button[data-action="increase"]').forEach(btn => {
      btn.addEventListener('click', function() {
        const action = this.dataset.action;
        const itemKey = this.dataset.itemKey;
        const quantitySpan = this.parentElement.querySelector('span');
        let currentValue = parseInt(quantitySpan.textContent);
        
        if (action === 'increase') {
          currentValue += 1;
        } else if (action === 'decrease' && currentValue > 1) {
          currentValue -= 1;
        }
        
        // Update the display
        quantitySpan.textContent = currentValue;
        
        // Update the hidden input for form submission
        let hiddenInput = document.querySelector(`input[name="updates[]"][data-item-key="${itemKey}"]`);
        if (!hiddenInput) {
          hiddenInput = document.createElement('input');
          hiddenInput.type = 'hidden';
          hiddenInput.name = 'updates[]';
          hiddenInput.dataset.itemKey = itemKey;
          hiddenInput.value = currentValue;
          this.closest('form').appendChild(hiddenInput);
        } else {
          hiddenInput.value = currentValue;
        }
        
        // Update button states
        const decreaseBtn = this.parentElement.querySelector('button[data-action="decrease"]');
        if (decreaseBtn) {
          decreaseBtn.disabled = currentValue <= 1;
          decreaseBtn.classList.toggle('opacity-50', currentValue <= 1);
          decreaseBtn.classList.toggle('cursor-not-allowed', currentValue <= 1);
        }
        
        // Auto-submit form after a short delay
        clearTimeout(this.updateTimeout);
        this.updateTimeout = setTimeout(() => {
          this.closest('form').submit();
        }, 500);
      });
    });
    
    // Remove item functionality
    document.querySelectorAll('button[data-action="remove"]').forEach(btn => {
      btn.addEventListener('click', function() {
        const itemKey = this.dataset.itemKey;
        
        // Create hidden input with quantity 0 to remove item
        let hiddenInput = document.querySelector(`input[name="updates[]"][data-item-key="${itemKey}"]`);
        if (!hiddenInput) {
          hiddenInput = document.createElement('input');
          hiddenInput.type = 'hidden';
          hiddenInput.name = 'updates[]';
          hiddenInput.dataset.itemKey = itemKey;
          hiddenInput.value = 0;
          this.closest('form').appendChild(hiddenInput);
        } else {
          hiddenInput.value = 0;
        }
        
        // Submit form to remove item
        const form = this.closest('form');
        form.submit();
      });
    });
  });
</script>