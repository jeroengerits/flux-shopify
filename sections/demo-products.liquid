{% comment %}
  Demo Products Section
  Showcases products with add to cart functionality to test the flyout cart
{% endcomment %}

<div class='px-6 py-12'>
  <div class='mx-auto max-w-7xl'>
    <h2 class='mb-8 text-center text-3xl font-bold text-neutral-900'>Demo Products</h2>

    <div class='grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3'>
      {% for product in collections.all.products limit: 6 %}
        <div class='group rounded-lg border border-neutral-200 bg-white p-6 shadow-sm transition-all hover:shadow-md'>
          <!-- Product Image -->
          <div class='mb-4 aspect-square overflow-hidden rounded-lg'>
            {% if product.featured_image %}
              <img
                src='{{ product.featured_image | image_url: width: 400, crop: 'center' }}'
                alt='{{ product.featured_image.alt | escape }}'
                loading='lazy'
                width='400'
                height='400'
                class='h-full w-full object-cover transition-transform duration-300 group-hover:scale-105'
              >
            {% else %}
              {{ 'product-1' | placeholder_svg_tag: 'h-full w-full text-neutral-300' }}
            {% endif %}
          </div>

          <!-- Product Info -->
          <div class='mb-4'>
            <h3 class='mb-2 text-lg font-semibold text-neutral-900'>
              <a href='{{ product.url }}' class='hover:text-neutral-700'>
                {{ product.title }}
              </a>
            </h3>
            <p class='text-sm text-neutral-500'>{{ product.type }}</p>
            <p class='mt-2 text-xl font-bold text-neutral-900'>{{ product.price | money }}</p>
          </div>

          <!-- Add to Cart Button -->
          <button
            type='button'
            class='w-full rounded-lg bg-neutral-900 px-4 py-3 text-sm font-medium text-white transition-colors hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-neutral-500 focus:ring-offset-2'
            onclick="addToCart('{{ product.selected_or_first_available_variant.id }}', '{{ product.title | escape }}', '{{ product.featured_image | image_url: width: 100 }}', '{{ product.price | money }}')"
          >
            Add to Cart
          </button>
        </div>
      {% else %}
        <!-- Fallback demo products if no real products exist -->
        {% assign demo_products = 'Demo Product 1,Demo Product 2,Demo Product 3' | split: ',' %}
        {% assign demo_prices = '29.99,49.99,79.99' | split: ',' %}
        {% assign demo_types = 'Electronics,Clothing,Home' | split: ',' %}

        {% for i in (0..2) %}
          <div class='group rounded-lg border border-neutral-200 bg-white p-6 shadow-sm transition-all hover:shadow-md'>
            <div class='mb-4 flex aspect-square items-center justify-center overflow-hidden rounded-lg bg-neutral-100'>
              <svg class='h-16 w-16 text-neutral-400' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
            </div>

            <div class='mb-4'>
              <h3 class='mb-2 text-lg font-semibold text-neutral-900'>{{ demo_products[i] }}</h3>
              <p class='text-sm text-neutral-500'>{{ demo_types[i] }}</p>
              <p class='mt-2 text-xl font-bold text-neutral-900'>${{ demo_prices[i] }}</p>
            </div>

            <button
              type='button'
              class='w-full rounded-lg bg-neutral-900 px-4 py-3 text-sm font-medium text-white transition-colors hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-neutral-500 focus:ring-offset-2'
              onclick="addDemoProduct('{{ demo_products[i] }}', {{ demo_prices[i] | replace: '.', '' }})"
            >
              Add to Cart
            </button>
          </div>
        {% endfor %}
      {% endfor %}
    </div>
  </div>
</div>

<script>
  // Demo function for fallback products
  function addDemoProduct(title, priceCents) {
    console.log(`Adding demo product: ${title} - $${(priceCents / 100).toFixed(2)}`);

    // For demo products, we'll simulate adding to cart
    if (window.flyoutCart) {
      // Create a mock cart item
      const mockItem = {
        key: 'demo-' + Date.now(),
        title: title,
        price: priceCents,
        final_price: priceCents,
        quantity: 1,
        image: null,
        url: '#',
        variant_title: null,
      };

      // Update cart display (this is just for demo purposes)
      const cartItemsContainer = document.getElementById('flyout-cart-items');
      if (cartItemsContainer) {
        const itemHTML = `
          <div class="flex items-center space-x-4 rounded-lg border border-neutral-200 p-4" data-item-key="${mockItem.key}">
            <div class="flex-shrink-0">
              <div class="h-20 w-20 rounded-lg bg-neutral-200 flex items-center justify-center">
                <svg class="h-8 w-8 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                </svg>
              </div>
            </div>
            <div class="min-w-0 flex-1">
              <h3 class="text-sm font-medium text-neutral-900 truncate">${mockItem.title}</h3>
              <div class="mt-2 flex items-center justify-between">
                <p class="text-sm font-medium text-neutral-900">$${(mockItem.price / 100).toFixed(2)}</p>
                <div class="flex items-center space-x-2">
                  <button type="button" class="flyout-cart-quantity-btn flex h-8 w-8 items-center justify-center rounded border border-neutral-300 text-sm font-medium text-neutral-700 transition-colors hover:bg-neutral-50" data-action="increase" data-item-key="${mockItem.key}">+</button>
                  <span class="w-8 text-center text-sm font-medium text-neutral-900">1</span>
                  <button type="button" class="flyout-cart-quantity-btn flex h-8 w-8 items-center justify-center rounded border border-neutral-300 text-sm font-medium text-neutral-700 transition-colors hover:bg-neutral-50 disabled:opacity-40" data-item-key="${mockItem.key}" data-action="decrease" disabled>âˆ’</button>
                </div>
              </div>
              <button type="button" class="mt-2 text-xs text-red-600 transition-colors hover:text-red-800" data-action="remove" data-item-key="${mockItem.key}">Remove</button>
            </div>
          </div>
        `;

        // Add to cart items
        const existingItems = cartItemsContainer.querySelector('.space-y-4');
        if (existingItems) {
          existingItems.insertAdjacentHTML('beforeend', itemHTML);
        } else {
          cartItemsContainer.innerHTML = `<div class="space-y-4">${itemHTML}</div>`;
        }

        // Update cart count
        const countBadge = document.getElementById('flyout-cart-count');
        if (countBadge) {
          const currentCount = parseInt(countBadge.textContent) || 0;
          countBadge.textContent = currentCount + 1;
          countBadge.classList.remove('scale-0', 'opacity-0');
        }

        // Show cart footer if it was hidden
        const cartFooter = document.getElementById('flyout-cart-footer');
        if (cartFooter) {
          cartFooter.style.display = 'block';
        }

        // Open the flyout cart
        window.flyoutCart.open();
      }
    }
  }
</script>

{% schema %}
{
  "name": "Demo Products",
  "presets": [
    {
      "name": "Demo Products",
      "category": "Products"
    }
  ]
}
{% endschema %}
